<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.dmt.patientapp"
    android:versionCode="1"
    android:versionName="1.0.0" >

    <uses-sdk
        android:minSdkVersion="19"
        android:targetSdkVersion="33" />
    <!--
         The INTERNET permission is required for development. Specifically,
         the Flutter tool needs it to communicate with the running application
         to allow setting breakpoints, to provide hot reload, etc.
    -->
    <uses-permission android:name="android.permission.INTERNET" />

    <!-- Request legacy Bluetooth permissions on older android devices. -->
    <uses-permission
        android:name="android.permission.BLUETOOTH"
        android:maxSdkVersion="30" />
    <uses-permission
        android:name="android.permission.BLUETOOTH_ADMIN"
        android:maxSdkVersion="30" />
    <!--
         Needed only if your app looks for Bluetooth devices.
         If your app doesn't use Bluetooth scan results to derive physical
         location information, you can strongly assert that your app
         doesn't derive physical location.
    -->
    <uses-permission
        android:name="android.permission.BLUETOOTH_SCAN"
        android:usesPermissionFlags="neverForLocation" />
    <!--
  Needed only if your app makes the android device discoverable to
  Bluetooth devices.
    -->
    <!--
  <uses-permission android:name="android.permission.BLUETOOTH_ADVERTISE"
  />
    -->
    <!--
  Needed only if your app communicates with already-paired Bluetooth
  devices.
    -->
    <uses-permission android:name="android.permission.BLUETOOTH_CONNECT" />
    <!--
  Needed only if your app uses Bluetooth scan results to derive physical
  location.
    -->
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <!-- Required to provide the web interface -->
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <!-- Required to run keep-alive service when targeting API 28 or higher -->
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <!-- For BP5S Internet communication and detect/manage Wi-Fi state -->
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
    <uses-permission android:name="android.permission.CHANGE_WIFI_MULTICAST_STATE" />
    <!-- Provide required visibility configuration for API level 30 and above -->
    <queries>

        <!-- If your app checks for SMS support -->

        <intent>
            <action android:name="android.intent.action.VIEW" />

            <category android:name="android.intent.category.BROWSABLE" />

            <data android:scheme="https" />
        </intent>
        <intent>
            <action android:name="android.intent.action.GET_CONTENT" />

            <data android:mimeType="*/*" />
        </intent>
    </queries> <!-- <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/> -->
    <!-- <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/> -->
    <uses-permission-sdk-23 android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission-sdk-23 android:name="android.permission.ACCESS_COARSE_LOCATION" />

    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="no.nordicsemi.android.LOG" />

    <application
        android:name="android.app.Application"
        android:appComponentFactory="androidx.core.app.CoreComponentFactory"
        android:debuggable="true"
        android:icon="@mipmap/ic_launcher"
        android:label="DMT-Patient" >
        <activity
            android:name="com.dmt.patientapp.MainActivity"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:exported="true"
            android:hardwareAccelerated="true"
            android:launchMode="singleTop"
            android:screenOrientation="portrait"
            android:theme="@style/LaunchTheme"
            android:windowSoftInputMode="adjustResize" >

            <!--
                 Specifies an Android theme to apply to this Activity as soon as
                 the Android process has started. This theme is visible to the user
                 while the Flutter UI initializes. After that, this theme continues
                 to determine the Window background behind the Flutter UI.
            -->
            <meta-data
                android:name="io.flutter.embedding.android.NormalTheme"
                android:resource="@style/NormalTheme" />

            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <!--
             Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java
        -->

        <service
            android:name="com.vivalnk.sdk.ble.dfu.DfuService"
            android:exported="false" >
            <intent-filter>
                <action android:name="no.nordicsemi.android.action.DFU_UPLOAD" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </service>

        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />

        <!--
    Service used to scan in background to emulate scanning with
    PendingIntent on Android 4.3 - 7.x. Service will scan in background with given
    settings and filters.
        -->
        <service
            android:name="com.vivalnk.android.support.v18.scanner.ScannerService"
            android:exported="false" />
        <!--
    The receiver used to scan with PendingIntent on Android 8+.
    It will translate results from android.bluetooth.le package to
    no.nordicsemi.android.support.v18, apply filters or perform batching,
    depending on the settings.
        -->
        <receiver
            android:name="com.vivalnk.android.support.v18.scanner.PendingIntentReceiver"
            android:exported="true" >
            <intent-filter>
                <action android:name="com.vivalnk.android.support.v18.ACTION_FOUND" />
            </intent-filter>
        </receiver>

        <activity android:name="com.vivalnk.sdk.ble.ota.NotificationActivity" /> <!-- //for BP5S -->
        <service
            android:name="com.ido.ble.bluetooth.DeviceConnectService"
            android:exported="false" />
        <service
            android:name="com.ido.ble.dfu.DFUService"
            android:enabled="true"
            android:exported="false" />

        <activity
            android:name="io.flutter.plugins.urllauncher.WebViewActivity"
            android:exported="false"
            android:theme="@android:style/Theme.NoTitleBar.Fullscreen" />

        <service
            android:name="androidx.room.MultiInstanceInvalidationService"
            android:directBootAware="true"
            android:exported="false" />
        <!--
		Service used to scan in background to emulate scanning with
		PendingIntent on Android 4.3 - 7.x. Service will scan in background with given
		settings and filters.
        -->
        <service
            android:name="no.nordicsemi.android.support.v18.scanner.ScannerService"
            android:exported="false" />
        <!--
		The receiver used to scan with PendingIntent on Android 8+.
		It will translate results from android.bluetooth.le package to
		no.nordicsemi.android.support.v18, apply filters or perform batching,
		depending on the settings.
        -->
        <receiver
            android:name="no.nordicsemi.android.support.v18.scanner.PendingIntentReceiver"
            android:exported="true" >
            <intent-filter>
                <action android:name="no.nordicsemi.android.support.v18.ACTION_FOUND" />
            </intent-filter>
        </receiver>

        <uses-library
            android:name="androidx.window.extensions"
            android:required="false" />
        <uses-library
            android:name="androidx.window.sidecar"
            android:required="false" />
    </application>

</manifest>